// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Cliente {
  id             Int      @id @default(autoincrement())
  nome           String   @db.VarChar(50)
  cpf            String   @unique @db.VarChar(20)
  telefone       String   @db.VarChar(15)
  email          String   @unique(map: "cliente_email_key") @db.VarChar(50)
  nascimento     DateTime
  password       String   @db.VarChar(100)
  PedidoIngresso Pedido[]
}

model Funcionario {
  id         Int      @id @default(autoincrement())
  nome       String   @db.VarChar(50)
  cpf        String   @unique(map: "funcionario_cpf_key") @db.VarChar(20)
  telefone   String   @db.VarChar(15)
  email      String   @unique @db.VarChar(50)
  nascimento DateTime
  password   String   @db.VarChar(100)
  Ingresso Ingresso[]
}

model Ingresso {
  id                  Int         @id @default(autoincrement())
  ingresso_disponivel String   @db.VarChar(30)
  data_disponivel     DateTime
  preco               String  
  funcionario         Funcionario @relation(fields: [funcionarioId], references: [id])
  funcionarioId       Int
  PedidoIngresso      Pedido[]
}

model Pedido {
  id            Int      @id @default(autoincrement())
  data          DateTime
  valorPago     String
  ingressoUsado String  @db.VarChar(40)
  ingressoTipo  String   @db.VarChar(40)
  codigoPedido  String   @unique // Adicione este campo
  cliente       Cliente  @relation(fields: [clienteId], references: [id])
  clienteId     Int
  ingresso      Ingresso @relation(fields: [ingressoId], references: [id])
  ingressoId    Int
}
